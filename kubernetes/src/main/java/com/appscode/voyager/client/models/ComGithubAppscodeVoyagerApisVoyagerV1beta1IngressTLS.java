/*
 * voyager-server
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * Contact: hello@appscode.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.appscode.voyager.client.models;

import java.util.Objects;
import com.appscode.voyager.client.models.ComGithubAppscodeVoyagerApisVoyagerV1beta1LocalTypedReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * IngressTLS describes the transport layer security associated with an Ingress.
 */
@ApiModel(description = "IngressTLS describes the transport layer security associated with an Ingress.")

public class ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS {
  @SerializedName("hosts")
  private List<String> hosts = null;

  @SerializedName("ref")
  private ComGithubAppscodeVoyagerApisVoyagerV1beta1LocalTypedReference ref = null;

  @SerializedName("secretName")
  private String secretName = null;

  public ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS hosts(List<String> hosts) {
    this.hosts = hosts;
    return this;
  }

  public ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS addHostsItem(String hostsItem) {
    if (this.hosts == null) {
      this.hosts = new ArrayList<String>();
    }
    this.hosts.add(hostsItem);
    return this;
  }

   /**
   * Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
   * @return hosts
  **/
  @ApiModelProperty(value = "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.")
  public List<String> getHosts() {
    return hosts;
  }

  public void setHosts(List<String> hosts) {
    this.hosts = hosts;
  }

  public ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS ref(ComGithubAppscodeVoyagerApisVoyagerV1beta1LocalTypedReference ref) {
    this.ref = ref;
    return this;
  }

   /**
   * Ref to used tls termination.
   * @return ref
  **/
  @ApiModelProperty(value = "Ref to used tls termination.")
  public ComGithubAppscodeVoyagerApisVoyagerV1beta1LocalTypedReference getRef() {
    return ref;
  }

  public void setRef(ComGithubAppscodeVoyagerApisVoyagerV1beta1LocalTypedReference ref) {
    this.ref = ref;
  }

  public ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS secretName(String secretName) {
    this.secretName = secretName;
    return this;
  }

   /**
   * SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \&quot;Host\&quot; header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing. Deprecated
   * @return secretName
  **/
  @ApiModelProperty(value = "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing. Deprecated")
  public String getSecretName() {
    return secretName;
  }

  public void setSecretName(String secretName) {
    this.secretName = secretName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS comGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS = (ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS) o;
    return Objects.equals(this.hosts, comGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS.hosts) &&
        Objects.equals(this.ref, comGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS.ref) &&
        Objects.equals(this.secretName, comGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS.secretName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hosts, ref, secretName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubAppscodeVoyagerApisVoyagerV1beta1IngressTLS {\n");
    
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    secretName: ").append(toIndentedString(secretName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

